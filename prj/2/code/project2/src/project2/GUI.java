
package project2;

import java.sql.*;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

public class GUI extends javax.swing.JFrame {

    // Create SQL objects to be used later
    Connection myconObj = null;
    Statement mystatObj = null;
    ResultSet myresObj = null;
    
    // Connect to the Turtle Database and display all entries in the GUI table
    public void updateTable() {
        try {
            myconObj = DriverManager.getConnection("jdbc:derby://localhost:1527/TurtleDatabase", "root", "Java01");
            mystatObj = myconObj.createStatement();
            myresObj = mystatObj.executeQuery("Select * from root.TABLE1");
            TABLE1Display.setModel(DbUtils.resultSetToTableModel(myresObj));
        }
        catch(SQLException ex) {
            ex.printStackTrace();
        }
    }

    // Empty all data fields in the GUI
    public void clearDataFields() {
        idTxt.setText("");
        speciesTxt.setText("");
        lengthTxt.setText("");
        weightTxt.setText("");
        shellTxt.setText("");
        headTxt.setText("");
        skinTxt.setText("");
        dateTxt.setText("");
        notesTxt.setText("");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tableScrollPane = new javax.swing.JScrollPane();
        TABLE1Display = new javax.swing.JTable();
        Add = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Save = new javax.swing.JButton();
        speciesLabel = new javax.swing.JLabel();
        speciesTxt = new javax.swing.JTextField();
        lengthLabel = new javax.swing.JLabel();
        lengthTxt = new javax.swing.JTextField();
        weightLabel = new javax.swing.JLabel();
        weightTxt = new javax.swing.JTextField();
        shellLabel = new javax.swing.JLabel();
        headLabel = new javax.swing.JLabel();
        skinLabel = new javax.swing.JLabel();
        skinTxt = new javax.swing.JTextField();
        dateLabel = new javax.swing.JLabel();
        notesScrollPane = new javax.swing.JScrollPane();
        notesTxt = new javax.swing.JTextArea();
        dateTxt = new javax.swing.JTextField();
        notesLabel = new javax.swing.JLabel();
        convertUnits = new javax.swing.JButton();
        shellTxt = new javax.swing.JTextField();
        headTxt = new javax.swing.JTextField();
        idLabel = new javax.swing.JLabel();
        idTxt = new javax.swing.JTextField();
        titleTxt = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(173, 216, 230));

        TABLE1Display.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, "", null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "SPECIES", "LENGTH (CM)", "WEIGHT (KG)", "SHELL TOP PATTERN", "HEAD PATTERN", "SKIN COLOR", "DATE FOUND", "NOTES"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TABLE1Display.getTableHeader().setReorderingAllowed(false);
        tableScrollPane.setViewportView(TABLE1Display);

        Add.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Add.setText("Add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Delete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Save.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        speciesLabel.setText("Species: ");

        speciesTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                speciesTxtActionPerformed(evt);
            }
        });

        lengthLabel.setText("Length: ");

        weightLabel.setText("Weight: ");

        shellLabel.setText("Shell Top Pattern: ");

        headLabel.setText("Head Pattern: ");

        skinLabel.setText("Skin Color: ");

        dateLabel.setText("Date Found: ");

        notesTxt.setColumns(20);
        notesTxt.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        notesTxt.setRows(5);
        notesScrollPane.setViewportView(notesTxt);

        dateTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateTxtActionPerformed(evt);
            }
        });

        notesLabel.setText("Notes: ");

        convertUnits.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        convertUnits.setText("Convert Units");
        convertUnits.setToolTipText("");
        convertUnits.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        convertUnits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertUnitsActionPerformed(evt);
            }
        });

        headTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                headTxtActionPerformed(evt);
            }
        });

        idLabel.setText("ID: ");

        idTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTxtActionPerformed(evt);
            }
        });

        titleTxt.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        titleTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleTxt.setText("Turtle Records");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(418, 418, 418)
                .addComponent(titleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(shellLabel)
                                    .addComponent(lengthLabel)
                                    .addComponent(weightLabel)
                                    .addComponent(speciesLabel)
                                    .addComponent(idLabel))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(speciesTxt)
                                    .addComponent(idTxt)
                                    .addComponent(lengthTxt)
                                    .addComponent(weightTxt)
                                    .addComponent(shellTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dateLabel)
                                    .addComponent(skinLabel)
                                    .addComponent(headLabel)
                                    .addComponent(notesLabel))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(headTxt)
                                    .addComponent(dateTxt)
                                    .addComponent(skinTxt)
                                    .addComponent(notesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1173, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(723, 723, 723)
                        .addComponent(convertUnits)
                        .addGap(50, 50, 50)
                        .addComponent(Add)
                        .addGap(50, 50, 50)
                        .addComponent(Save)
                        .addGap(50, 50, 50)
                        .addComponent(Delete)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(titleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(speciesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(speciesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lengthTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lengthLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(weightTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(weightLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(shellTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(shellLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(headLabel)
                            .addComponent(headTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(skinTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(skinLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(notesLabel)
                            .addComponent(notesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Add)
                    .addComponent(Save)
                    .addComponent(Delete)
                    .addComponent(convertUnits))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // When user presses the Add button, this method creates a database entry
    // with data provided by the user and updates the GUI table
    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        Add a = new Add();
        try {
            a.addEntry(Integer.valueOf(idTxt.getText()),
                speciesTxt.getText(), Double.valueOf(lengthTxt.getText()),
                Double.valueOf(weightTxt.getText()), shellTxt.getText(),
                headTxt.getText(), skinTxt.getText(), dateTxt.getText(), 
                notesTxt.getText());
        }
        // Error message pops up if user tries to enter non-numerical values for
        // ID, Length, and Weight
        catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "ID, Length, and Weight must be"
                    + " numerical values.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        updateTable();
        clearDataFields();
    }//GEN-LAST:event_AddActionPerformed

    private void speciesTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_speciesTxtActionPerformed
        // Non-removable method generated by IDE
    }//GEN-LAST:event_speciesTxtActionPerformed

    // When user presses the Delete button, this method removes the selected 
    // entry from the database and updates the GUI table
    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        Delete d = new Delete();
        try {
            d.deleteEntry(Integer.valueOf(idTxt.getText()));
        }
        // Message pops up if user tries to enter a non-integer value for ID
        catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "ID must be an integer.", "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
        updateTable();
        clearDataFields();
    }//GEN-LAST:event_DeleteActionPerformed

    private void dateTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateTxtActionPerformed
        // Non-removable method generated by IDE
    }//GEN-LAST:event_dateTxtActionPerformed

    // When user presses the Convert Units button, this method gets the converted
    // length and weight from a database entry and displays them in the GUI
    private void convertUnitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertUnitsActionPerformed
        Convert c = new Convert();
        try {
            String[] results = c.convertUnits(Integer.valueOf(idTxt.getText()));
            lengthTxt.setText(results[0]);
            weightTxt.setText(results[1]);
        }
        // Message pops up if user tries to enter a non-integer value for ID
        catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "ID must be an integer.", "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_convertUnitsActionPerformed

    private void idTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTxtActionPerformed
        // Non-removable method generated by IDE
    }//GEN-LAST:event_idTxtActionPerformed

    // When user presses the Save button, this method updates the selected 
    // entry in the database and updates the GUI table
    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        Save s = new Save();
        try {
            s.saveChanges(Integer.valueOf(idTxt.getText()),
                speciesTxt.getText(), Double.valueOf(lengthTxt.getText()),
                Double.valueOf(weightTxt.getText()), shellTxt.getText(),
                headTxt.getText(), skinTxt.getText(), dateTxt.getText(), 
                notesTxt.getText());
        }
        // Error message pops up if user tries to enter non-numerical values for
        // ID, Length, and Weight
        catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "ID, Length, and Weight must be"
                    + " numerical values.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        updateTable();
        clearDataFields();
    }//GEN-LAST:event_SaveActionPerformed

    private void headTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_headTxtActionPerformed
        // Non-removable method generated by IDE
    }//GEN-LAST:event_headTxtActionPerformed

    // Creates new form GUI
    public GUI() {
        initComponents();
        updateTable();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        // Create and display the form
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Save;
    private javax.swing.JTable TABLE1Display;
    private javax.swing.JButton convertUnits;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextField dateTxt;
    private javax.swing.JLabel headLabel;
    private javax.swing.JTextField headTxt;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField idTxt;
    private javax.swing.JLabel lengthLabel;
    private javax.swing.JTextField lengthTxt;
    private javax.swing.JLabel notesLabel;
    private javax.swing.JScrollPane notesScrollPane;
    private javax.swing.JTextArea notesTxt;
    private javax.swing.JLabel shellLabel;
    private javax.swing.JTextField shellTxt;
    private javax.swing.JLabel skinLabel;
    private javax.swing.JTextField skinTxt;
    private javax.swing.JLabel speciesLabel;
    private javax.swing.JTextField speciesTxt;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JLabel titleTxt;
    private javax.swing.JLabel weightLabel;
    private javax.swing.JTextField weightTxt;
    // End of variables declaration//GEN-END:variables
}
